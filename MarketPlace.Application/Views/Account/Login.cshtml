@model MarketPlace.Data.DataObjects.Auth.LoginViewModel

@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<h1>Login</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model.Errors.Any())
            {
                <div class="alert alert-danger">@Model.Errors.FirstOrDefault()</div>
                <br />
            }
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
            <p>Create an Account <a asp-action="Register" asp-controller="Account" class="text-bg-primary">here</a></p>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
